library(arules)
library(ROracle)
drv=dbDriver("Oracle")
conn=dbConnect(drv,username="datauser",password="datauser",dbname="10.92.14.32:1521/GZYCICSS")
sql1=paste("CREATE OR REPLACE VIEW fre_analysis AS SELECT PRODUCT_ID,SUBSTR(admv_dvsn,0,6) subid,concat(admv_dvsn,ymd) aid,YMD FROM EXPORDERLINE WHERE admv_dvsn >='520100' AND admv_dvsn <='522732' AND SUBSTR(admv_dvsn,0,6) IS NOT NULL AND product_id IS NOT NULL AND YMD between '",start,"' and '",end,"'",sep="")
sql2="create or replace view fre_analysis2 as SELECT aid,PRODUCT_CODE FROM fre_analysis  LEFT JOIN v_d_cgrt_spec  ON fre_analysis.product_id=v_d_cgrt_spec.id"
sql3="create or replace view fre_analysis3 as select wmsys.wm_concat(distinct PRODUCT_CODE) as brand_code  from fre_analysis2 group by aid"
dbSendQuery(conn,sql1)
dbSendQuery(conn,sql2)
dbSendQuery(conn,sql3)
data=dbSendQuery(conn,"select BRAND_code from fre_analysis3 where length(BRAND_code)>6")
rawdata=fetch(data)
predata=list()
for(n in 1:dim(rawdata)[1])
{
  predata[n]=strsplit(rawdata[n,1],",")
}
trans=as(predata,"transactions")
rules <- apriori(trans,parameter=list(support=0.6,maxlen=3,confidence=0.8))
##inspect(rules)
rules=sort(rules,by="lift")
lhs=data.frame()
rhs=data.frame()
lhs=as(rules@lhs,"list")
lhs=as.list(lhs)
lhs=t(lhs)
rhs=as(rules@rhs,"list")
rhs=as.data.frame(rhs)
rhs=t(rhs)
final=cbind(lhs[1:100],rhs[1:100])
final=cbind(final,rules@quality[1:100,1:3])
names(final)=c("lhs","rhs","support","confidence","lift")
dbSendQuery(conn,"drop table \"frequency\"")
dbWriteTable(conn,"frequency",final)
dbSendQuery(conn,"commit")